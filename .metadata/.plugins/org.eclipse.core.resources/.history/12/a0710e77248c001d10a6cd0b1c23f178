package com.example.demo.consumer;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.kafka.annotation.DltHandler;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.kafka.annotation.RetryableTopic;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.kafka.support.KafkaHeaders;
import org.springframework.messaging.handler.annotation.Header;
import org.springframework.retry.annotation.Backoff;
import org.springframework.stereotype.Service;

@Service
public class KafkaConsumer {

    private static final Logger LOGGER = LoggerFactory.getLogger(KafkaConsumer.class);
    
    @Autowired
    KafkaTemplate<String, String> kt;
    
    int count = 0;
    
//    @RetryableTopic(attempts = "2", backoff = @Backoff(delay = 1000, multiplier = 3.0),autoCreateTopics = "false",retryTopicSuffix = "-retry")
    @KafkaListener(topics = {"mgmplat-comp-example","mgmplat-comp-example-retry"},
                    groupId = "group-id")
    public void consume(String message,@Header(KafkaHeaders.RECEIVED_TOPIC) String topic){
    	if(topic == "mgmplat-comp-example-retry")
    	{
    		count++;
    		
    		LOGGER.info("in retry topic for"+count+"time");
    		if(count == 2)
    		{
    			count = 0;
    			return;
    		}

    		
    	}
    	
    	LOGGER.info("topic name"+topic);
        LOGGER.info(String.format("Message received -> %s", message));
        try {
        	 int x = Integer.parseInt(message);
        }
        catch (Exception e) {
        	if(count <= 3) {
        		kt.send("mgmplat-comp-example-retry", "key1", message);
        		count++;
        	}
        	
		}
       
    }
    
    
//    @DltHandler
//    public void dlt(String msg, @Header(KafkaHeaders.RECEIVED_TOPIC) String topic){
//        System.out.println("Dead Message : "+msg +" from "+topic);
//    }
//	
}
